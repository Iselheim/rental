{"version":3,"sources":["./src/app/components/branches/branch-list/branch-list.component.ts","./src/app/components/branches/branch-list/branch-list.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/service/rest.service.ts","./src/app/components/get-components/get-customer-list/get-customer-list.component.ts","./src/app/components/get-components/get-customer-list/get-customer-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/branches/company-branch.component.ts","./src/app/components/branches/company-branch.component.html","./src/app/components/customer/customer.component.ts","./src/app/components/customer/customer.component.html","./src/app/app.module.ts","./src/app/components/booking/booking.component.ts","./src/app/components/booking/booking.component.html","./src/app/components/employees-list/employees-list.component.ts","./src/app/components/employees-list/employees-list.component.html","./src/app/components/cars/cars.component.ts","./src/app/components/cars/cars.component.html","./src/app/components/cars/car-available/car-available.component.ts","./src/app/components/cars/car-available/car-available.component.html","./src/app/app-routing.module.ts","./src/app/components/edit-company-data/edit-company-data.ts","./src/app/components/edit-company-data/edit-company-data.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {Branch, EmployeeB} from \"../../../service/branch\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {RestService} from \"../../../service/rest.service\";\r\nimport {Location} from \"@angular/common\";\r\nimport {Address} from \"../../../service/branch\";\r\n\r\n@Component({\r\n  selector: 'app-branch-list',\r\n  templateUrl: './branch-list.component.html',\r\n  styleUrls: ['./branch-list.component.css']\r\n})\r\nexport class BranchListComponent implements OnInit {\r\n  branches: Branch[];\r\n  branch: Branch;\r\n  employee: EmployeeB;\r\n  showAdd = false;\r\n  address: Address\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private restService: RestService,\r\n    private location: Location\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getBranches();\r\n  }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  getBranches():void{\r\n    this.restService.getBranches()\r\n      .subscribe(branches => this.branches = branches);\r\n  }\r\n\r\n\r\n  deleteBranch(branch: Branch): void {\r\n    this.branches = this.branches.filter(s => s !== branch);\r\n    this.restService.deleteBranch(branch).subscribe();\r\n  }\r\n\r\n  public addBranch(streetWithNumber: string, city: string, postalCode: string): void {\r\n    if (!streetWithNumber || !city || !postalCode ) {\r\n      return;\r\n    }\r\n    this.address = {streetWithNumber, city, postalCode }\r\n    this.restService.addBranch({ address: this.address } as Branch)\r\n      .subscribe(branch => {\r\n        this.branches.push(branch);\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"editblock\">\r\n<table *ngFor=\"let branch of branches\">\r\n    <tr >\r\n      <th colspan=\"3\" ><h4>Oddział nr. {{branch?.id}} <br/> ul. {{branch?.address?.streetWithNumber}}, {{branch?.address?.postalCode}} {{branch?.address?.city}}</h4></th>\r\n\r\n    <th>  <h5> Zamknij</h5> <button  class=\"button button-red\"><i class=\"icon-wrench\"></i></button></th></tr>\r\n\r\n\r\n\r\n\r\n\r\n  </table>\r\n   <h5> Dodaj</h5> <button (click)=\"showAdd = !showAdd\" class=\"button button-green\"><i class=\"icon-credit-card\"></i></button>\r\n  <table *ngIf=\"showAdd\"><h5> Wpisz dane:</h5>\r\n   <tr>\r\n    <td>      <label for=\"streetWithNumber\">Ulica: </label>\r\n    </td>\r\n    <td><div class=\"tableDiv\"><input type=\"text\" id=\"streetWithNumber\" #streetWithNumber ></div></td>\r\n   </tr>\r\n  <tr>\r\n  <td>      <label for=\"city\">Miasto: </label>\r\n  </td>\r\n  <td><div class=\"tableDiv\"><input type=\"text\" id=\"city\" #city ></div></td>\r\n  <td>\r\n  </tr>\r\n    <td>      <label for=\"postalCode\">Kod pocztowy: </label>\r\n    </td>\r\n    <td><div class=\"tableDiv\"><input type=\"text\" id=\"postalCode\" #postalCode ></div></td>\r\n    <td>\r\n    <td>\r\n      <button (click)=\"addBranch(streetWithNumber.value, city.value, postalCode.value);\r\n              streetWithNumber.value=''; city.value=''; postalCode.value=''\" class=\"button button-green\"><i class=\"icon-wrench\" ></i></button>\r\n      <button  class=\"button button-red\"><i class=\"icon-cancel-circled\" ></i></button>\r\n    </td>\r\n  </table>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *3\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Address, CompanyBranch, CompanyData} from \"../../service/company-data\";\r\nimport {RestService} from \"../../service/rest.service\";\r\nimport {Branch} from \"../../service/branch\";\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n@Input() branches:Branch[];\r\n\r\ncompanyData : CompanyData;\r\n\r\n\r\n  showBranchList = false;\r\n\r\n\r\n  constructor(private restService : RestService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.restService.getCompanyData().subscribe(value => {\r\n      this.companyData = value;\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","<section>\r\n  <div class=\"editblock\">\r\n    <h4>Dane firmy</h4>\r\n    <table class=\"table100-13\">\r\n      <thead>\r\n      <tr>\r\n        <th> </th>\r\n        <th> </th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr>\r\n        <td class=\"tdWidth20\">     <label >Nazwa: </label></td>\r\n        <td><p>{{companyData?.name}}</p>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <label>Domena: </label>\r\n\r\n        <td>   <p><a href=\"{{companyData?.webDomain}}\">{{companyData?.webDomain}}</a></p>     <td>\r\n      </td>\r\n      </tr>\r\n      <tr>\r\n        <td>      <label >Adres: </label>\r\n        </td>\r\n        <td><p>ul. {{companyData?.address?.streetWithNumber}}, {{companyData?.address?.postalCode}} {{companyData?.address?.city}} </p></td>\r\n      </tr>\r\n      <tr>\r\n        <td>      <label>Właściciel: </label>\r\n        </td>\r\n        <td> <p>{{companyData?.owner}}</p></td>\r\n      </tr>\r\n      <tr>\r\n        <td>         <label>Logotyp: </label>\r\n\r\n        </td>\r\n        <td>  <p>{{companyData?.logoURL}}</p></td>\r\n      </tr>\r\n      <tr>\r\n        <td>         <label >Oddziały: </label>\r\n\r\n        </td>\r\n        <td > <a></a> <p>Tu będzie się wyświetlało ile jest dostępnych odziałów z odnośnikiem do listy oddziałów</p>\r\n          <button (click)=\"showBranchList = !showBranchList\" class=\"button button-green\"><i class=\"icon-wrench\"></i></button></td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n<div *ngIf=\"showBranchList\"><app-branch-list><p>  Podaj Addres</p></app-branch-list>\r\n\r\n\r\n</div>\r\n\r\n</section>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>Błąd, strona nie znaleziona </h1>\r\n<p>\r\n  <i class=\"icon-minus-circled\"></i>\r\n</p>\r\n\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {CompanyData} from \"./company-data\";\r\nimport {catchError} from 'rxjs/operators';\r\nimport {throwError} from 'rxjs';\r\nimport {Branch, EmployeeB} from \"./branch\";\r\nimport {Employee} from \"./employee\";\r\n\r\n\r\nimport {Car} from \"./car\";\r\n\r\n\r\nimport {Customer} from \"./customer\";\r\nimport {BookingComponent} from \"../components/booking/booking.component\";\r\nimport {Booking} from \"./booking\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n\r\n  readonly BASE_URL = 'http://localhost:8080';\r\n  httpOptnions = {headers: new HttpHeaders({'Content-Type': 'application/json'})}\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n\r\n  public getCompanyData(): Observable<CompanyData> {\r\n\r\n    return this.httpClient.get<CompanyData>(this.BASE_URL + '/home');\r\n  }\r\n\r\n  public updateCompanyData(companyData: CompanyData): Observable<CompanyData> {\r\n    return this.httpClient.put<CompanyData>(this.BASE_URL + '/home', companyData, this.httpOptnions);\r\n\r\n  }\r\n\r\n  public getBranch(id: number): Observable<Branch> {\r\n    const url = `${this.BASE_URL + '/branches'}/${id}`;\r\n    return this.httpClient.get<Branch>(url);\r\n\r\n  }\r\n\r\n  public getBranches(): Observable<Branch[]> {\r\n\r\n    return this.httpClient.get<Branch[]>(this.BASE_URL + '/branches');\r\n  }\r\n\r\n  public addBranch(branch: Branch): Observable<Branch> {\r\n    return this.httpClient.put<Branch>(this.BASE_URL + '/branches', branch, this.httpOptnions);\r\n\r\n  }\r\n\r\n  public deleteBranch(branch: Branch): Observable<Branch> {\r\n    const url = `${this.BASE_URL + '/branches'}/${branch.id}`;\r\n    return this.httpClient.delete<Branch>(url, this.httpOptnions);\r\n  }\r\n\r\n  public updateBranch(branch: Branch): Observable<Branch> {\r\n    const url = `${this.BASE_URL + '/branches'}/${branch.id}`;\r\n    return this.httpClient.put<Branch>(url, branch, this.httpOptnions)\r\n  }\r\n\r\n  public getBranchCars(id: number): Observable<Car[]> {\r\n    const url = `${this.BASE_URL + '/branches'}/${id}` + '/cars';\r\n    return this.httpClient.get<Car[]>(url);\r\n  }\r\n\r\n  public getEmployee(): Observable<Employee> {\r\n    return this.httpClient.get<Employee>(this.BASE_URL + '/employees');\r\n  }\r\n\r\n  public getEmployees(): Observable<Employee[]> {\r\n\r\n    return this.httpClient.get<Employee[]>(this.BASE_URL + '/employees');\r\n  }\r\n\r\n  public getCars(): Observable<Car[]> {\r\n    return this.httpClient.get<Car[]>(this.BASE_URL + '/cars');\r\n  }\r\n\r\n  // public getBranchCars(id: number): Observable<Car[]>{\r\n  //   const url = `${this.BASE_URL + '/branches'}/${id}` + '/cars';\r\n  //   return this.httpClient.get<Car[]>(url);\r\n  // }\r\n\r\n\r\n  public getCustomers(): Observable<Customer[]> {\r\n    return this.httpClient.get<Customer[]>(this.BASE_URL + '/customers');\r\n  }\r\n\r\n  public getBooking(): Observable<Booking[]> {\r\n    return this.httpClient.get<Booking[]>(this.BASE_URL + '/booking');\r\n  }\r\n\r\n  public getBookingId(id: number): Observable<Booking[]> {\r\n    const url = `${this.BASE_URL + '/booking'}/${id}`;\r\n    return this.httpClient.get<Booking[]>(url);\r\n  }\r\npublic addBooking(booking: Booking): Observable<Booking>   {\r\n  return this.httpClient.put<Booking>(this.BASE_URL + '/booking', booking, this.httpOptnions);}\r\n  // public getEmployee(id: number): Observable<Employee>{\r\n    //   const url = `${this.BASE_URL + '/branches'}/${id}`;\r\n    //   return this.httpClient.get<Employee>(url);\r\n    //\r\n    // }\r\n    // public getEmployees(): Observable<Employee[]> {\r\n    //   return this.httpClient.get<Employee[]>(this.BASE_URL + '/branches');\r\n    // }\r\n    // public update(companyData): Observable<CompanyData> {\r\n    //    return this.httpClient.put<CompanyData>(this.BASE_URL + '/home/', JSON.stringify(companyData), this.httpOptnions)\r\n    //      .pipe(\r\n    //        catchError(this.errorHandler)\r\n    //      )\r\n    //  }\r\n    //\r\n    //\r\n    //\r\n    //  errorHandler(error) {\r\n    //    let errorMessage = '';\r\n    //    if(error.error instanceof ErrorEvent) {\r\n    //      // Get client-side error\r\n    //      errorMessage = error.error.message;\r\n    //    } else {\r\n    //      // Get server-side error\r\n    //      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    //    }\r\n    //    console.log(errorMessage);\r\n    //    return throwError(errorMessage);\r\n    //  }\r\n  }\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {RestService} from \"../../../service/rest.service\";\r\nimport {Customer} from \"../../../service/customer\";\r\n\r\n@Component({\r\n  selector: 'app-get-customer-list',\r\n  templateUrl: './get-customer-list.component.html',\r\n  styleUrls: ['./get-customer-list.component.css']\r\n})\r\nexport class GetCustomerListComponent implements OnInit {\r\n  customers: Customer[];\r\n\r\n  constructor(private restService: RestService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCustomers()\r\n  }\r\n  getCustomers():void{\r\n    this.restService.getCustomers()\r\n      .subscribe(customers => this.customers = customers);\r\n  }\r\n}\r\n","\r\n  <select>\r\n    <option *ngFor=\"let customer of customers\" [ngValue]=\"customer\">{{ customer?.firstName }} {{customer?.lastName}}</option>\r\n  </select>\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Wypożyczalnia samochodów SDA';\r\n}\r\n","<header>\r\n  <div class=\"container\">\r\n   <a class=\"title\" [routerLink]=\"['/home']\"><h1>\r\n      {{ title }}\r\n    </h1></a>\r\n  </div>\r\n</header>\r\n\r\n<main>\r\n  <div class=\"container\">\r\n    <div class=\"nav\">\r\n\r\n      <a class=\"a-menu\" [routerLink]=\"['/edit']\"> <div class=\"menublock\">\r\n        <i class=\"icon-cog-alt\"></i><br>\r\n        Edycja danych\r\n      </div></a>\r\n      <a class=\"a-menu\" [routerLink]=\"['/branches']\"> <div class=\"menublock\">\r\n        <i class=\"icon-bank\"></i><br>\r\n        Oddział\r\n      </div></a>\r\n      <a class=\"a-menu\" [routerLink]=\"['/cars']\"> <div class=\"menublock\">\r\n        <i class=\"icon-cab\"></i><br>\r\n        Samochody\r\n      </div></a>\r\n      <a class=\"a-menu\" [routerLink]=\"['/customer']\">\r\n        <div class=\"menublock\">\r\n          <i class=\"icon-user\"></i><br>\r\n          Klient\r\n        </div></a>\r\n      <a class=\"a-menu\"[routerLink]=\"['/booking']\"> <div class=\"menublock\">\r\n        <i class=\"icon-calendar\"></i><br>\r\n        Rezerwacja\r\n      </div></a>\r\n      <a class=\"a-menu\" [routerLink]=\"['/data']\"> <div class=\"menublock\">\r\n        <i class=\"icon-chart-bar-outline\"></i><br>\r\n        Statystyki\r\n      </div></a>\r\n    </div>\r\n    <div class=\"content\">\r\n    <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n\r\n</main>\r\n\r\n<footer>\r\n  <div class=\"container\">\r\n    Copyright &copy; 2020 by SDA.\r\n  </div>\r\n</footer>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {RestService} from \"../../service/rest.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {Branch, EmployeeB} from \"../../service/branch\";\r\nimport {Location} from \"@angular/common\";\r\nimport {Car} from \"../../service/car\";\r\n\r\n@Component({\r\n  selector: 'app-company-branch',\r\n  templateUrl: './company-branch.component.html',\r\n  styleUrls: ['./company-branch.component.css']\r\n})\r\nexport class CompanyBranchComponent implements OnInit {\r\n  branches: Branch[];\r\n  branch: Branch;\r\n  employeeB: EmployeeB;\r\ncars: Car[];\r\n  car: Car;\r\nbranchCar: boolean;\r\nshowCars: boolean;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private restService: RestService,\r\n    private location: Location\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getBranches();\r\n\r\n\r\n  }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  getBranches():void{\r\n    this.restService.getBranches()\r\n      .subscribe(branches => {this.branches = branches;\r\n      this.getCarsId();} //todo jesli bedzie przycisk to to nie potrzebne\r\n      );\r\n  }\r\n\r\n\r\n  deleteBranch(branch: Branch): void {\r\n    this.branches = this.branches.filter(s => s !== branch);\r\nthis.restService.deleteBranch(branch).subscribe();\r\n  }\r\n\r\nsaveBranch(): void{\r\n    this.restService.updateBranch(this.branch)\r\n      .subscribe(()=> this.goBack());\r\n}\r\n\r\n\r\n\r\n  // getCar(id: number):void {\r\n  //   this.restService.getBranchCars(id)\r\n  //     .subscribe(cars => {\r\n  //       this.cars = cars;\r\n  //     });\r\n  // }\r\n  getCarsId():void{\r\n    this.restService.getBranchCars(1)  //todo przycisk do wczytywania danych\r\n      .subscribe(cars => this.cars = cars);\r\n  }\r\n\r\n\r\n  // getCar(id: number):void {\r\n  //   this.restService.getBranchCars(id)\r\n  //     .subscribe(cars => {\r\n  //       this.cars = cars;\r\n  //     });\r\n  // }\r\n  // getCarsId():void{\r\n  //   this.restService.getBranchCars(1)  //todo przycisk do wczytywania danych\r\n  //     .subscribe(cars => this.cars = cars);\r\n  // }\r\n\r\n  // getCarsId(id):void{\r\n  //   this.restService.getBranchCars(id)  //todo przycisk do wczytywania danych\r\n  //     .subscribe(cars => this.cars = cars);\r\n  // }\r\n\r\n}\r\n","<section>\r\n<div class=\"editblock\" *ngFor=\"let branch of branches\">\r\n  <table >\r\n    <thead>\r\n    <tr >\r\n      <th colspan=\"3\" ><h4>Oddział nr. {{branch?.id}} <br/> ul. {{branch?.address?.streetWithNumber}}, {{branch?.address?.postalCode}} {{branch?.address?.city}}</h4></th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n\r\n    <tr>\r\n      <th colspan=\"3\">Lista pracowników</th>\r\n    </tr>\r\n    <tr >\r\n      <td colspan=\"2\"><h6>Imię i nazwisko</h6></td>\r\n      <td><h6>Pozcyja</h6></td>\r\n    </tr>\r\n\r\n    <tr *ngFor=\"let employee of branch.employees\">\r\n      <td colspan=\"2\"><p>{{employee?.firstName}} {{employee?.lastName}}</p></td>\r\n      <td><p>{{employee?.position}}</p></td>\r\n    </tr>\r\n    <tr >\r\n      <th colspan=\"3\">Samochód<button (click)=\"showCars = !showCars\" (click)=\"getCarsId()\" class=\"button button-green\"> Wczytaj</button></th>\r\n    </tr>\r\n\r\n\r\n    <tr >\r\n      <td colspan=\"2\">samochod<br></td>\r\n      <td>dostępny w danej lokalizacji</td>\r\n    </tr>\r\n    <tbody *ngIf=\"showCars\">\r\n    <tr *ngFor=\"let car of cars\">\r\n      <td colspan=\"2\" > {{car?.regNumber}}  {{car?.model}}</td>\r\n      <td>Jak będą wypożyczenia to sie zrobi</td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n</div>\r\n\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {RestService} from \"../../service/rest.service\";\r\nimport {Customer} from \"../../service/customer\";\r\n\r\n@Component({\r\n  selector: 'app-klients',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\ncustomers: Customer[];\r\n\r\n  constructor( private restService: RestService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCustomers()\r\n  }\r\n\r\n  getCustomers():void{\r\n    this.restService.getCustomers()\r\n      .subscribe(customers => this.customers = customers);\r\n  }\r\n}\r\n","<div class=\"editblock\">\r\n<table>\r\n  <thead>\r\n  <tr>\r\n    <th colspan=\"3\"><h5>Lista klientów</h5></th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n    <td>Imię i Nazwisko</td>\r\n    <td>Email</td>\r\n    <td>Adres</td>\r\n  </tr>\r\n  <tr *ngFor=\"let customer of customers\">\r\n    <td><p> {{customer?.firstName}} {{customer?.lastName}}</p></td>\r\n    <td><p>{{customer?.email}}</p></td>\r\n    <td>ul. {{customer?.address?.streetWithNumber}}, {{customer?.address?.postalCode}} {{customer?.address?.city}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { EditComponent } from './components/edit-company-data/edit-company-data';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { CarsComponent } from './components/cars/cars.component';\r\nimport { CustomerComponent } from './components/customer/customer.component';\r\nimport { BookingComponent } from './components/booking/booking.component';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {HomeComponent} from \"./components/home/home.component\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {CompanyBranchComponent} from \"./components/branches/company-branch.component\";\r\nimport { CarAvailableComponent } from './components/cars/car-available/car-available.component';\r\nimport { EmployeesListComponent } from './components/employees-list/employees-list.component';\r\nimport { BranchListComponent } from './components/branches/branch-list/branch-list.component';\r\nimport {GetCustomerListComponent} from \"./components/get-components/get-customer-list/get-customer-list.component\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EditComponent,\r\n    NotFoundComponent,\r\nCompanyBranchComponent,\r\n    CarsComponent,\r\n    CustomerComponent,\r\n    BookingComponent,\r\n   HomeComponent,\r\n   CarAvailableComponent,\r\n   EmployeesListComponent,\r\n   BranchListComponent,\r\nGetCustomerListComponent,\r\n\r\n\r\n  ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        NgbModule,\r\n    ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {RestService} from \"../../service/rest.service\";\r\nimport {Booking} from \"../../service/booking\";\r\nimport {Customer} from \"../../service/customer\";\r\nimport {Branch} from \"../../service/branch\";\r\nimport {Car} from \"../../service/car\";\r\nimport {Employee} from \"../../service/employee\";\r\nimport {Data} from \"@angular/router\";\r\nimport {NgbCalendar, NgbDateStruct} from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-booking',\r\n  templateUrl: './booking.component.html',\r\n  styleUrls: ['./booking.component.css'],\r\n\r\n})\r\nexport class BookingComponent implements OnInit {\r\n booking: Booking[];\r\n  branches: Branch[];\r\n  cars: Car[];\r\n  employees: Employee[];\r\n  rent: NgbDateStruct;\r\n  return:NgbDateStruct;\r\n  date: {year: number, month: number};\r\n  @Input() bookingAdd: Booking[];\r\n  customers: Customer[];\r\n  constructor(private restService : RestService, private calendar: NgbCalendar  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getBooking();\r\n    this.getCustomers();\r\n    this.getBranches();\r\n    this.getEmployees();\r\nthis.getCars();\r\n    this.rent = this.calendar.getToday();\r\n    this.return = this.calendar.getToday();\r\n  }\r\n\r\n  getBooking(): void{\r\n    this.restService.getBooking()\r\n      .subscribe(booking => this.booking = booking);\r\n  }\r\n  public addBooking(customerID: number, employeeId: number, carId: number,\r\n                    rentalDay: string, returnDay: string): void { //rentBranchId: number, returnBranchId: number nie wiem czy to trzeba?\r\n    if (!customerID || !employeeId|| carId ) {\r\n      return;\r\n    }\r\n\r\n// @ts-ignore //Todo nie wiem co się tu wydarzyło ????\r\n\r\n    this.restService.addBooking({customerID, employeeId, carId,\r\n      rentalDay, returnDay} as Booking)    //rentBranchId, returnBranchId\r\n      .subscribe(booking => {\r\n        this.bookingAdd.push(booking);\r\n      });\r\n  }\r\n  getCustomers():void{\r\n    this.restService.getCustomers()\r\n      .subscribe(customers => this.customers = customers);\r\n  }\r\n  getBranches():void{\r\n    this.restService.getBranches()\r\n      .subscribe(branches => this.branches = branches\r\n      );\r\n  }\r\n  getCars():void{\r\n    this.restService.getCars()\r\n      .subscribe(cars => this.cars = cars);\r\n  }\r\n\r\n  public getEmployees(): void {\r\n    this.restService.getEmployees().subscribe(employees => this.employees = employees);\r\n  }\r\n}\r\n\r\n","<section>\r\n  <div class=\"block\">\r\n\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th colspan=\"9\"><h5>Lista wypożyczeń</h5></th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr>\r\n        <td><h6>Numer</h6></td>\r\n        <td><h6>Utworzono w dniu</h6></td>\r\n        <td><h6>Wypożyczający</h6></td>\r\n        <td><h6>Przez pracownika</h6></td>\r\n        <td><h6>Samochód</h6></td>\r\n        <td><h6>Dzień wypożyczenia</h6></td>\r\n        <td><h6>Dzień zwrotu</h6></td>\r\n        <td><h6>Z oddziału</h6></td>\r\n        <td><h6>Do oddziału</h6></td>\r\n      </tr>\r\n      <tr *ngFor=\"let book of booking\">\r\n        <td><p>{{book?.id}}</p></td>\r\n        <td><p>{{book?.createdTimestamp}}<p></td>\r\n        <td><p>{{book?.customerId}}</p></td>k\r\n        <td><p>{{book?.employeeId}}</p></td>\r\n        <td><p>{{book?.carId}}</p></td>\r\n        <td><p>{{book?.rentalDay}}</p></td>\r\n        <td><p>{{book?.returnDay}}</p></td>\r\n        <td><p>{{book?.rentBranchId}}</p></td>\r\n        <td><p>{{book?.returnBranchId}}</p></td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n\r\n  </div>\r\n  <div class=\"block\">\r\n    <table>\r\n\r\n      <thead>\r\n      <tr>\r\n        <th colspan=\"2\"><h5>Nowe wypożyczenie</h5></th>\r\n\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr>\r\n        <td><h6>Wypożyczone przez:</h6></td>\r\n        <td>\r\n          <select>\r\n            <option *ngFor=\"let customer of customers\" [ngValue]=\"customer\">{{ customer?.firstName }} {{customer?.lastName}}</option>\r\n          </select></td>\r\n      </tr>\r\n      <tr>\r\n        <td><h6>Dodane przez:</h6></td>\r\n        <td> <select>\r\n          <option *ngFor=\"let employee of employees\" [ngValue]=\"employee\">{{ employee?.firstName }} {{employee?.lastName}}</option>\r\n        </select></td>\r\n      </tr>\r\n      <tr>\r\n        <td><h6>Wypożyczono samochód:</h6></td>\r\n        <td><select>\r\n          <option *ngFor=\"let car of cars\" [ngValue]=\"car\">{{ car?.regNumber }},  {{car?.brand}}  {{car?.model}}</option>\r\n        </select></td>\r\n      </tr>\r\n      <tr>\r\n        <td><h6>Wypożyczono w dniu:</h6>\r\n        </td>\r\n        <td>\r\n          <form class=\"form-inline\">\r\n            <div class=\"form-group\">\r\n              <div class=\"input-group\">\r\n                <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\r\n                       name=\"dp\" [(ngModel)]=\"rent\" ngbDatepicker #d=\"ngbDatepicker\">\r\n                <div class=\"input-group-append\">\r\n                  <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td><h6>Oddano w dniu:</h6></td>\r\n        <td><form class=\"form-inline\">\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\r\n                     name=\"dp2\" [(ngModel)]=\"return\" ngbDatepicker #d2=\"ngbDatepicker\">\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-outline-secondary calendar\" (click)=\"d2.toggle()\" type=\"button\"></button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form></td>\r\n      </tr>\r\n      <tr>\r\n        <td></td>\r\n        <td><button class=\"button-green\"><h6>Zapisz</h6></button></td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {RestService} from \"../../service/rest.service\";\r\nimport {Employee} from \"../../service/employee\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-employees-list',\r\n  templateUrl: './employees-list.component.html',\r\n  styleUrls: ['./employees-list.component.css']\r\n})\r\nexport class EmployeesListComponent implements OnInit {\r\nemployee : Employee;\r\nemployees: Employee[];\r\n\r\n\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private restService: RestService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmployee();\r\n  }\r\npublic getEmployee(): void {\r\n  this.restService.getEmployee().subscribe(value => {\r\n    this.employee = value;\r\n  });\r\n}\r\n}\r\n","<table >\r\n  <tr *ngFor=\"let employee of employees\">\r\n    <th>\r\n      {{employee?.firstName}} {{employee?.lastName}} stanowisko: {{employee?.position}} oddział: {{employee?.branchId}}</th>\r\n  </tr>\r\n</table>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Car} from \"../../service/car\";\r\nimport {RestService} from \"../../service/rest.service\";\r\n\r\n@Component({\r\n  selector: 'app-cars',\r\n  templateUrl: './cars.component.html',\r\n  styleUrls: ['./cars.component.css']\r\n})\r\nexport class CarsComponent implements OnInit {\r\ncar : Car;\r\ncars: Car[];\r\n\r\n  constructor(private restService : RestService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCars();\r\n\r\n  }\r\n  getCars():void{\r\n    this.restService.getCars()\r\n      .subscribe(cars => this.cars = cars);\r\n  }\r\n\r\n}\r\n","<section>\r\n  <div class=\"block\" >\r\n<table>\r\n  <thead>\r\n  <tr>\r\n    <th colspan=\"10\">Lista samochodów</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr >\r\n    <td colspan=\"2\">Numer rejestracyjny<br></td>\r\n    <td>Model</td>\r\n    <td>Typ nadwozia</td>\r\n    <td>Rocznik</td>\r\n    <td>Kolor</td>\r\n    <td>Przebieg</td>\r\n    <td>Kwota za dzień</td>\r\n    <td>Obecnie w odziale nr.</td>\r\n    <td>Status</td>\r\n  </tr>\r\n  <tr *ngFor=\"let car of cars\">\r\n    <td colspan=\"2\">{{car?.regNumber}}</td>\r\n    <td>{{car?.model}}</td>\r\n    <td>{{car?.bodyType}}</td>\r\n    <td>{{car?.productionYear}}</td>\r\n    <td>{{car?.paintColor}}</td>\r\n    <td>{{car?.mileage}}</td>\r\n    <td>{{car?.pricing}}</td>\r\n    <td>{{car?.branchId}}</td>\r\n    <td>{{car?.status}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Car} from \"../../../service/car\";\r\nimport {RestService} from \"../../../service/rest.service\";\r\n\r\n@Component({\r\n  selector: 'app-car-available',\r\n  templateUrl: './car-available.component.html',\r\n  styleUrls: ['./car-available.component.css']\r\n})\r\nexport class CarAvailableComponent implements OnInit {\r\n\r\n  car : Car;\r\n  cars: Car[];\r\n\r\n  constructor(private restService : RestService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCars();\r\n\r\n  }\r\n  getCars():void{\r\n    this.restService.getCars()\r\n      .subscribe(cars => this.cars = cars);\r\n  }\r\n\r\n}\r\n","<table>\r\n  <thead>\r\n  <tr>\r\n    <th colspan=\"3\">Samochód</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n    <td colspan=\"2\">samochod<br></td>\r\n    <td>dostępny w danej lokalizacji</td>\r\n  </tr>\r\n  <tr>\r\n    <td colspan=\"2\">auto 1</td>\r\n    <td>20.10.20</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {EditComponent} from './components/edit-company-data/edit-company-data';\r\nimport {NotFoundComponent} from './components/not-found/not-found.component';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {CarsComponent} from './components/cars/cars.component';\r\nimport {CustomerComponent} from './components/customer/customer.component';\r\nimport {BookingComponent} from './components/booking/booking.component';\r\nimport {CompanyBranchComponent} from './components/branches/company-branch.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'edit', component: EditComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'cars', component: CarsComponent },\r\n  { path: 'customer', component: CustomerComponent },\r\n  { path: 'booking', component: BookingComponent },\r\n  { path: 'branches', component: CompanyBranchComponent },\r\n\r\n\r\n  { path: '**', redirectTo: '/404', pathMatch: 'full' },\r\n  { path: '404', component: NotFoundComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {CompanyData} from \"../../service/company-data\";\r\nimport {RestService} from \"../../service/rest.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit-company-data.html',\r\n  styleUrls: ['./edit-company-data.css']\r\n})\r\nexport class EditComponent implements OnInit {\r\ncompanyData: CompanyData;\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private restService : RestService,\r\n    private location: Location\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.restService.getCompanyData().subscribe(value => {\r\n      this.companyData = value;\r\n    });\r\n  }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  save(): void {\r\n\r\n    this.restService.updateCompanyData(this.companyData)\r\n      .subscribe(() => this.goBack());\r\n  }\r\n\r\n\r\n}\r\n","<section *ngIf=\"companyData\">\r\n\r\n    <div class=\"editblock\">\r\n\r\n      <h4>Edycja</h4>\r\n      <table class=\"table100-13\">\r\n        <thead>\r\n        <tr>\r\n          <th ></th>\r\n          <th></th>\r\n          <th></th>\r\n\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n          <td  class=\"tdName\" >    <label for=\"name\">Nazwa: </label></td>\r\n          <td class=\"td57\">\r\n            <div class=\"tableDiv\">\r\n              <input type=\"text\"  id=\"name\" [(ngModel)]=\"companyData.name\"></div></td>\r\n          <td>\r\n            <button  (click)=\"save()\" class=\"button button-green\" ><i class=\"icon-wrench\"></i></button>\r\n            <button  class=\"button button-red\"><i class=\"icon-cancel-circled\"></i></button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <label for=\"webDomain\">Domena: </label>\r\n\r\n          <td>\r\n            <div class=\"tableDiv\"> <input type=\"text\" id=\"webDomain\" [(ngModel)]=\"companyData.webDomain\"></div></td>\r\n          <td>\r\n            <button (click)=\"save()\" class=\"button button-green\"><i class=\"icon-wrench\"></i></button>\r\n            <button  class=\"button button-red\"><i class=\"icon-cancel-circled\"></i></button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>      <label for=\"company_address_street\">Ulica: </label>\r\n          </td>\r\n          <td><div class=\"tableDiv\"><input type=\"text\" id=\"company_address_street\" [(ngModel)]=\"companyData.address.streetWithNumber\" ></div></td>\r\n          <td>\r\n            <button (click)=\"save()\" class=\"button button-green\"><i class=\"icon-wrench\" ></i></button>\r\n            <button  class=\"button button-red\"><i class=\"icon-cancel-circled\" ></i></button>\r\n          </td>\r\n        </tr>\r\n        <td>      <label for=\"company_address_city\">Miasto: </label>\r\n        </td>\r\n        <td><div class=\"tableDiv\"><input type=\"text\" id=\"company_address_city\" [(ngModel)]=\"companyData.address.city\" ></div></td>\r\n        <td>\r\n          <button (click)=\"save()\" class=\"button button-green\"><i class=\"icon-wrench\" ></i></button>\r\n          <button  class=\"button button-red\"><i class=\"icon-cancel-circled\" ></i></button>\r\n        </td>\r\n       <tr>\r\n         <td>      <label for=\"company_address_code\">Kod pocztowy: </label>\r\n         </td>\r\n         <td><div class=\"tableDiv\"><input type=\"text\" id=\"company_address_code\" [(ngModel)]=\"companyData.address.postalCode\" ></div></td>\r\n         <td>\r\n           <button (click)=\"save()\" class=\"button button-green\"><i class=\"icon-wrench\" ></i></button>\r\n           <button  class=\"button button-red\"><i class=\"icon-cancel-circled\" ></i></button>\r\n         </td>\r\n       </tr>\r\n        <tr>\r\n          <td>      <label for=\"owner\">Właściciel: </label>\r\n          </td>\r\n          <td><div class=\"tableDiv\"> <input type=\"text\" id=\"owner\"[(ngModel)]=\"companyData.owner\" ></div></td>\r\n          <td>\r\n            <button (click)=\"save()\" class=\"button button-green\"><i class=\"icon-wrench\"></i></button>\r\n            <button  class=\"button button-red\"><i class=\"icon-cancel-circled\"></i></button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>         <label for=\"logoURL\">Logotyp: </label>\r\n\r\n          </td>\r\n          <td> <div class=\"tableDiv\"> <input type=\"text\" id=\"logoURL\"[(ngModel)]=\"companyData.logoURL\" ></div></td>\r\n          <td>\r\n            <button (click)=\"save()\" class=\"button button-green\" ><i class=\"icon-wrench\"></i></button>\r\n            <button  class=\"button button-red\"><i class=\"icon-cancel-circled\"></i></button>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n</section>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}